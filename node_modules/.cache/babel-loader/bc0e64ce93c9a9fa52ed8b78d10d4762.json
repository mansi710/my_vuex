{"ast":null,"code":"import { createStore } from \"vuex\"; // each Vuex instance is just a single state tree.\n\nconst state = {\n  count: 0\n}; // mutations are operations that actually mutate the state.\n// each mutation handler gets the entire state tree as the\n// first argument, followed by additional payload arguments.\n// mutations must be synchronous and can be recorded by plugins\n// for debugging purposes.\n\nconst mutations = {\n  increment(state) {\n    state.count++;\n  },\n\n  decrement(state) {\n    state.count--;\n  }\n\n}; // actions are functions that cause side effects and can involve\n// asynchronous operations.\n\nconst actions = {\n  increment: ({\n    commit\n  }) => commit(\"increment\"),\n  decrement: ({\n    commit\n  }) => commit(\"decrement\"),\n\n  incrementIfOdd({\n    commit,\n    state\n  }) {\n    if ((state.count + 1) % 2 === 0) {\n      commit(\"increment\");\n    }\n  },\n\n  incrementAsync({\n    commit\n  }) {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        commit(\"increment\");\n        resolve();\n      }, 1000);\n    });\n  }\n\n}; // getters are functions.\n\nconst getters = {\n  evenOrOdd: state => state.count % 2 === 0 ? \"even\" : \"odd\"\n}; // A Vuex instance is created by combining the state, mutations, actions,\n// and getters.\n\nexport default createStore({\n  state,\n  getters,\n  actions,\n  mutations\n});","map":{"version":3,"names":["createStore","state","count","mutations","increment","decrement","actions","commit","incrementIfOdd","incrementAsync","Promise","resolve","setTimeout","getters","evenOrOdd"],"sources":["/var/www/html/newData/mansi/vuex/src/store/counter.js"],"sourcesContent":["import { createStore } from \"vuex\";\n\n// each Vuex instance is just a single state tree.\nconst state = {\n  count: 0,\n};\n\n// mutations are operations that actually mutate the state.\n// each mutation handler gets the entire state tree as the\n// first argument, followed by additional payload arguments.\n// mutations must be synchronous and can be recorded by plugins\n// for debugging purposes.\nconst mutations = {\n  increment(state) {\n    state.count++;\n  },\n  decrement(state) {\n    state.count--;\n  },\n};\n\n// actions are functions that cause side effects and can involve\n// asynchronous operations.\nconst actions = {\n  increment: ({ commit }) => commit(\"increment\"),\n  decrement: ({ commit }) => commit(\"decrement\"),\n  incrementIfOdd({ commit, state }) {\n    if ((state.count + 1) % 2 === 0) {\n      commit(\"increment\");\n    }\n  },\n  incrementAsync({ commit }) {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        commit(\"increment\");\n        resolve();\n      }, 1000);\n    });\n  },\n};\n\n// getters are functions.\nconst getters = {\n  evenOrOdd: (state) => (state.count % 2 === 0 ? \"even\" : \"odd\"),\n};\n\n// A Vuex instance is created by combining the state, mutations, actions,\n// and getters.\nexport default createStore({\n  state,\n  getters,\n  actions,\n  mutations,\n});\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,MAA5B,C,CAEA;;AACA,MAAMC,KAAK,GAAG;EACZC,KAAK,EAAE;AADK,CAAd,C,CAIA;AACA;AACA;AACA;AACA;;AACA,MAAMC,SAAS,GAAG;EAChBC,SAAS,CAACH,KAAD,EAAQ;IACfA,KAAK,CAACC,KAAN;EACD,CAHe;;EAIhBG,SAAS,CAACJ,KAAD,EAAQ;IACfA,KAAK,CAACC,KAAN;EACD;;AANe,CAAlB,C,CASA;AACA;;AACA,MAAMI,OAAO,GAAG;EACdF,SAAS,EAAE,CAAC;IAAEG;EAAF,CAAD,KAAgBA,MAAM,CAAC,WAAD,CADnB;EAEdF,SAAS,EAAE,CAAC;IAAEE;EAAF,CAAD,KAAgBA,MAAM,CAAC,WAAD,CAFnB;;EAGdC,cAAc,CAAC;IAAED,MAAF;IAAUN;EAAV,CAAD,EAAoB;IAChC,IAAI,CAACA,KAAK,CAACC,KAAN,GAAc,CAAf,IAAoB,CAApB,KAA0B,CAA9B,EAAiC;MAC/BK,MAAM,CAAC,WAAD,CAAN;IACD;EACF,CAPa;;EAQdE,cAAc,CAAC;IAAEF;EAAF,CAAD,EAAa;IACzB,OAAO,IAAIG,OAAJ,CAAaC,OAAD,IAAa;MAC9BC,UAAU,CAAC,MAAM;QACfL,MAAM,CAAC,WAAD,CAAN;QACAI,OAAO;MACR,CAHS,EAGP,IAHO,CAAV;IAID,CALM,CAAP;EAMD;;AAfa,CAAhB,C,CAkBA;;AACA,MAAME,OAAO,GAAG;EACdC,SAAS,EAAGb,KAAD,IAAYA,KAAK,CAACC,KAAN,GAAc,CAAd,KAAoB,CAApB,GAAwB,MAAxB,GAAiC;AAD1C,CAAhB,C,CAIA;AACA;;AACA,eAAeF,WAAW,CAAC;EACzBC,KADyB;EAEzBY,OAFyB;EAGzBP,OAHyB;EAIzBH;AAJyB,CAAD,CAA1B"},"metadata":{},"sourceType":"module"}