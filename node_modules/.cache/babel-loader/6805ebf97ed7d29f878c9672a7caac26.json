{"ast":null,"code":"// import Vue from \"vue\";\n// import VueX from \"vuex\";\n// Vue.use(VueX);\n// export default new VueX.Store({\n//   state: {\n//     todos: [\n//       {\n//         title: \"todo item completed A\",\n//         completed: false,\n//       },\n//       {\n//         title: \"todo item completed B\",\n//         completed: false,\n//       },\n//     ],\n//   },\n//   getters: {},\n//   mutations: {},\n//   actions: {},\n// });\nimport { createStore } from \"vuex\"; // import shop from \"./shop\";\n\nimport actions from \"./actions\";\nimport cart from \"./modules/cart\";\nimport products from \"./modules/products\";\nexport default createStore({\n  state: {\n    todos: [{\n      title: \"todo item completed A\",\n      completed: false\n    }, {\n      title: \"todo item completed B\",\n      completed: false\n    }],\n    //like data\n    products: [],\n    cart: [],\n    checkoutStatus: null\n  },\n  // modules: {\n  //   cart,\n  //   products,\n  // },\n  getters: {\n    completedTodos(state) {\n      return state.todos.filter(todo => {\n        return todo.completed === true;\n      }).length;\n    },\n\n    pendingTodos(state) {\n      return state.todos.filter(todo => {\n        return todo.completed === false;\n      }).length;\n    },\n\n    productsCount() {},\n\n    // cartProducts(state, getters, rootState) {\n    availableProducts(state) {\n      return state.products.filter(product => product.inventory > 0);\n    },\n\n    //for cart\n    cartProducts(state) {\n      return state.cart.map(cartItem => {\n        const product = state.products.find(product => product.id === cartItem.id);\n        return {\n          title: product.title,\n          price: product.price,\n          quantity: cartItem.quantity\n        };\n      });\n    },\n\n    //cart to total\n    cartTotal(state, getters) {\n      return getters.cartProducts.reduce((total, product) => total + product.price * product.quantity, 0);\n    },\n\n    //product is in stock\n    productIsInStock() {\n      return product => {\n        return product.inventory > 0;\n      };\n    }\n\n  },\n  mutations: {\n    NEW_TODO(state, todoItem) {\n      state.todos.push({\n        title: todoItem,\n        completed: false\n      });\n    },\n\n    DELETE_TODO(state, todoItem) {\n      let index = state.todos.indexOf(todoItem);\n      state.todos.splice(index, 1);\n    },\n\n    TOGGLE_TODO_STATUS(state, todoItem) {\n      todoItem.completed = !todoItem.completed;\n    },\n\n    //setting and updating state\n    //when state change\n    //and only responsible for updating just a piece of the state.\n    setProducts(state, products) {\n      state.products = products;\n    },\n\n    pushProductToCart(state, productId) {\n      state.cart.push({\n        id: productId,\n        quantity: 1\n      });\n    },\n\n    incrementItemQuantity(state, cartItem) {\n      cartItem.quantity++;\n    },\n\n    decrementProductInventory(state, product) {\n      product.inventory--;\n    },\n\n    setCheckoutStatus(state, status) {\n      state.checkoutStatus = status;\n    },\n\n    emptyCart(state) {\n      state.cart = [];\n    }\n\n  },\n  actions\n});","map":{"version":3,"names":["createStore","actions","cart","products","state","todos","title","completed","checkoutStatus","getters","completedTodos","filter","todo","length","pendingTodos","productsCount","availableProducts","product","inventory","cartProducts","map","cartItem","find","id","price","quantity","cartTotal","reduce","total","productIsInStock","mutations","NEW_TODO","todoItem","push","DELETE_TODO","index","indexOf","splice","TOGGLE_TODO_STATUS","setProducts","pushProductToCart","productId","incrementItemQuantity","decrementProductInventory","setCheckoutStatus","status","emptyCart"],"sources":["/var/www/html/newData/mansi/vuex/src/store/store.js"],"sourcesContent":["// import Vue from \"vue\";\n// import VueX from \"vuex\";\n\n// Vue.use(VueX);\n\n// export default new VueX.Store({\n//   state: {\n//     todos: [\n//       {\n//         title: \"todo item completed A\",\n//         completed: false,\n//       },\n//       {\n//         title: \"todo item completed B\",\n//         completed: false,\n//       },\n//     ],\n//   },\n//   getters: {},\n//   mutations: {},\n//   actions: {},\n// });\n\nimport { createStore } from \"vuex\";\n// import shop from \"./shop\";\nimport actions from \"./actions\";\nimport cart from \"./modules/cart\";\nimport products from \"./modules/products\";\nexport default createStore({\n  state: {\n    todos: [\n      {\n        title: \"todo item completed A\",\n        completed: false,\n      },\n      {\n        title: \"todo item completed B\",\n        completed: false,\n      },\n    ],\n\n    //like data\n    products: [],\n    cart: [],\n    checkoutStatus: null,\n  },\n\n  // modules: {\n  //   cart,\n  //   products,\n  // },\n  getters: {\n    completedTodos(state) {\n      return state.todos.filter((todo) => {\n        return todo.completed === true;\n      }).length;\n    },\n    pendingTodos(state) {\n      return state.todos.filter((todo) => {\n        return todo.completed === false;\n      }).length;\n    },\n    productsCount() {},\n    // cartProducts(state, getters, rootState) {\n\n    availableProducts(state) {\n      return state.products.filter((product) => product.inventory > 0);\n    },\n\n    //for cart\n    cartProducts(state) {\n      return state.cart.map((cartItem) => {\n        const product = state.products.find(\n          (product) => product.id === cartItem.id\n        );\n        return {\n          title: product.title,\n          price: product.price,\n          quantity: cartItem.quantity,\n        };\n      });\n    },\n\n    //cart to total\n    cartTotal(state, getters) {\n      return getters.cartProducts.reduce(\n        (total, product) => total + product.price * product.quantity,\n        0\n      );\n    },\n\n    //product is in stock\n    productIsInStock() {\n      return (product) => {\n        return product.inventory > 0;\n      };\n    },\n  },\n  mutations: {\n    NEW_TODO(state, todoItem) {\n      state.todos.push({\n        title: todoItem,\n        completed: false,\n      });\n    },\n    DELETE_TODO(state, todoItem) {\n      let index = state.todos.indexOf(todoItem);\n      state.todos.splice(index, 1);\n    },\n    TOGGLE_TODO_STATUS(state, todoItem) {\n      todoItem.completed = !todoItem.completed;\n    },\n\n    //setting and updating state\n    //when state change\n    //and only responsible for updating just a piece of the state.\n      setProducts(state, products) {\n        state.products = products;\n      },\n      pushProductToCart(state, productId) {\n        state.cart.push({\n          id: productId,\n          quantity: 1,\n        });\n      },\n\n      incrementItemQuantity(state, cartItem) {\n        cartItem.quantity++;\n      },\n\n      decrementProductInventory(state, product) {\n        product.inventory--;\n      },\n      setCheckoutStatus(state, status) {\n        state.checkoutStatus = status;\n      },\n      emptyCart(state) {\n        state.cart = [];\n      },\n  },\n  actions,\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}