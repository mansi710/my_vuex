{"ast":null,"code":"// import { resolve } from \"core-js/fn/promise\";\nimport { createStore } from \"vuex\"; // import store from \"./store\";\n\nimport shop from \"./shop\";\nexport default createStore({\n  state: {\n    //like data\n    products: [],\n    cart: []\n  },\n  getters: {\n    //like computed properties\n    productsCount() {},\n\n    availableProducts(state) {\n      return state.products.filter(product => product.inventory > 0);\n    },\n\n    //for cart\n    cartProducts(state) {\n      return state.cart.map(cartItem => {\n        console.log(hh);\n        const product = state.products.find(product => product.id === cartItem.id);\n        return {\n          title: product.title,\n          price: product.price,\n          quantity: cartItem.quantity\n        };\n      });\n    }\n\n  },\n  actions: {\n    //make the ajax call\n    //run setProducts mutation\n    fetchProducts({\n      commit\n    }) {\n      return new Promise(resolve => {\n        shop.getProducts(products => {\n          commit(\"setProducts\", products);\n          resolve();\n        });\n      });\n    },\n\n    // fetchProducts(context) {\n    //   shop.getProducts((products) => {\n    //     context.commit(\"setProducts\", products);\n    //   });\n    // },\n    addProductToCart(context, product) {\n      if (product.inventory > 0) {\n        //find cartItem\n        const cartItem = context.state.cart.find(item => item.id === product.id);\n\n        if (!cartItem) {\n          //pushProductToCart\n          context.commit(\"pushProductToCart\", product.id);\n        } else {\n          //incrementItemQuantity\n          context.commit(\"incrementItemQuantity\", cartItem);\n        }\n\n        context.commit(\"decrementProductInventory\", product);\n      }\n    }\n\n  },\n  mutations: {\n    //setting and updating state\n    //when state change\n    //and only responsible for updating just a piece of the state.\n    setProducts(state, products) {\n      state.products = products;\n    },\n\n    pushProductToCart(state, productId) {\n      state.cart.push({\n        id: productId,\n        quantity: 1\n      });\n    },\n\n    incrementItemQuantity(state, cartItem) {\n      cartItem.quantity++;\n    },\n\n    decrementProductInventory(state, product) {\n      product.inventory--;\n    }\n\n  }\n});","map":{"version":3,"names":["createStore","shop","state","products","cart","getters","productsCount","availableProducts","filter","product","inventory","cartProducts","map","cartItem","console","log","hh","find","id","title","price","quantity","actions","fetchProducts","commit","Promise","resolve","getProducts","addProductToCart","context","item","mutations","setProducts","pushProductToCart","productId","push","incrementItemQuantity","decrementProductInventory"],"sources":["/var/www/html/newData/mansi/vuex/src/store/shoppingcart.js"],"sourcesContent":["// import { resolve } from \"core-js/fn/promise\";\nimport { createStore } from \"vuex\";\n// import store from \"./store\";\nimport shop from \"./shop\";\nexport default createStore({\n  state: {\n    //like data\n    products: [],\n    cart: [],\n  },\n  getters: {\n    //like computed properties\n    productsCount() {},\n    availableProducts(state) {\n      return state.products.filter((product) => product.inventory > 0);\n    },\n\n    //for cart\n    cartProducts(state) {\n      return state.cart.map((cartItem) => {\n        console.log(hh)\n        const product = state.products.find(\n          (product) => product.id === cartItem.id\n        );\n        return {\n          title: product.title,\n          price: product.price,\n          quantity: cartItem.quantity,\n        };\n      });\n    },\n  },\n  actions: {\n    //make the ajax call\n    //run setProducts mutation\n    fetchProducts({ commit }) {\n      return new Promise((resolve) => {\n        shop.getProducts((products) => {\n          commit(\"setProducts\", products);\n          resolve();\n        });\n      });\n    },\n\n    // fetchProducts(context) {\n    //   shop.getProducts((products) => {\n    //     context.commit(\"setProducts\", products);\n    //   });\n    // },\n\n    addProductToCart(context, product) {\n      if (product.inventory > 0) {\n        //find cartItem\n        const cartItem = context.state.cart.find(\n          (item) => item.id === product.id\n        );\n        if (!cartItem) {\n          //pushProductToCart\n          context.commit(\"pushProductToCart\", product.id);\n        } else {\n          //incrementItemQuantity\n          context.commit(\"incrementItemQuantity\", cartItem);\n        }\n        context.commit(\"decrementProductInventory\", product);\n      }\n    },\n  },\n  mutations: {\n    //setting and updating state\n    //when state change\n    //and only responsible for updating just a piece of the state.\n    setProducts(state, products) {\n      state.products = products;\n    },\n    pushProductToCart(state, productId) {\n      state.cart.push({\n        id: productId,\n        quantity: 1,\n      });\n    },\n\n    incrementItemQuantity(state, cartItem) {\n      cartItem.quantity++;\n    },\n\n    decrementProductInventory(state, product) {\n      product.inventory--;\n    },\n  },\n});\n"],"mappings":"AAAA;AACA,SAASA,WAAT,QAA4B,MAA5B,C,CACA;;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,eAAeD,WAAW,CAAC;EACzBE,KAAK,EAAE;IACL;IACAC,QAAQ,EAAE,EAFL;IAGLC,IAAI,EAAE;EAHD,CADkB;EAMzBC,OAAO,EAAE;IACP;IACAC,aAAa,GAAG,CAAE,CAFX;;IAGPC,iBAAiB,CAACL,KAAD,EAAQ;MACvB,OAAOA,KAAK,CAACC,QAAN,CAAeK,MAAf,CAAuBC,OAAD,IAAaA,OAAO,CAACC,SAAR,GAAoB,CAAvD,CAAP;IACD,CALM;;IAOP;IACAC,YAAY,CAACT,KAAD,EAAQ;MAClB,OAAOA,KAAK,CAACE,IAAN,CAAWQ,GAAX,CAAgBC,QAAD,IAAc;QAClCC,OAAO,CAACC,GAAR,CAAYC,EAAZ;QACA,MAAMP,OAAO,GAAGP,KAAK,CAACC,QAAN,CAAec,IAAf,CACbR,OAAD,IAAaA,OAAO,CAACS,EAAR,KAAeL,QAAQ,CAACK,EADvB,CAAhB;QAGA,OAAO;UACLC,KAAK,EAAEV,OAAO,CAACU,KADV;UAELC,KAAK,EAAEX,OAAO,CAACW,KAFV;UAGLC,QAAQ,EAAER,QAAQ,CAACQ;QAHd,CAAP;MAKD,CAVM,CAAP;IAWD;;EApBM,CANgB;EA4BzBC,OAAO,EAAE;IACP;IACA;IACAC,aAAa,CAAC;MAAEC;IAAF,CAAD,EAAa;MACxB,OAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAa;QAC9BzB,IAAI,CAAC0B,WAAL,CAAkBxB,QAAD,IAAc;UAC7BqB,MAAM,CAAC,aAAD,EAAgBrB,QAAhB,CAAN;UACAuB,OAAO;QACR,CAHD;MAID,CALM,CAAP;IAMD,CAVM;;IAYP;IACA;IACA;IACA;IACA;IAEAE,gBAAgB,CAACC,OAAD,EAAUpB,OAAV,EAAmB;MACjC,IAAIA,OAAO,CAACC,SAAR,GAAoB,CAAxB,EAA2B;QACzB;QACA,MAAMG,QAAQ,GAAGgB,OAAO,CAAC3B,KAAR,CAAcE,IAAd,CAAmBa,IAAnB,CACda,IAAD,IAAUA,IAAI,CAACZ,EAAL,KAAYT,OAAO,CAACS,EADf,CAAjB;;QAGA,IAAI,CAACL,QAAL,EAAe;UACb;UACAgB,OAAO,CAACL,MAAR,CAAe,mBAAf,EAAoCf,OAAO,CAACS,EAA5C;QACD,CAHD,MAGO;UACL;UACAW,OAAO,CAACL,MAAR,CAAe,uBAAf,EAAwCX,QAAxC;QACD;;QACDgB,OAAO,CAACL,MAAR,CAAe,2BAAf,EAA4Cf,OAA5C;MACD;IACF;;EAjCM,CA5BgB;EA+DzBsB,SAAS,EAAE;IACT;IACA;IACA;IACAC,WAAW,CAAC9B,KAAD,EAAQC,QAAR,EAAkB;MAC3BD,KAAK,CAACC,QAAN,GAAiBA,QAAjB;IACD,CANQ;;IAOT8B,iBAAiB,CAAC/B,KAAD,EAAQgC,SAAR,EAAmB;MAClChC,KAAK,CAACE,IAAN,CAAW+B,IAAX,CAAgB;QACdjB,EAAE,EAAEgB,SADU;QAEdb,QAAQ,EAAE;MAFI,CAAhB;IAID,CAZQ;;IAcTe,qBAAqB,CAAClC,KAAD,EAAQW,QAAR,EAAkB;MACrCA,QAAQ,CAACQ,QAAT;IACD,CAhBQ;;IAkBTgB,yBAAyB,CAACnC,KAAD,EAAQO,OAAR,EAAiB;MACxCA,OAAO,CAACC,SAAR;IACD;;EApBQ;AA/Dc,CAAD,CAA1B"},"metadata":{},"sourceType":"module"}