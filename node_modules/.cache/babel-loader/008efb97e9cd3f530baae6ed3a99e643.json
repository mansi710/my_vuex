{"ast":null,"code":"// import Vue from \"vue\";\n// import VueX from \"vuex\";\n// Vue.use(VueX);\n// export default new VueX.Store({\n//   state: {\n//     todos: [\n//       {\n//         title: \"todo item completed A\",\n//         completed: false,\n//       },\n//       {\n//         title: \"todo item completed B\",\n//         completed: false,\n//       },\n//     ],\n//   },\n//   getters: {},\n//   mutations: {},\n//   actions: {},\n// });\nimport { createStore } from \"vuex\";\nimport shop from \"./shop\";\nexport default createStore({\n  state: {\n    todos: [{\n      title: \"todo item completed A\",\n      completed: false\n    }, {\n      title: \"todo item completed B\",\n      completed: false\n    }],\n    //like data\n    products: [],\n    cart: [],\n    checkoutStatus: null\n  },\n  getters: {\n    completedTodos(state) {\n      return state.todos.filter(todo => {\n        return todo.completed === true;\n      }).length;\n    },\n\n    pendingTodos(state) {\n      return state.todos.filter(todo => {\n        return todo.completed === false;\n      }).length;\n    },\n\n    productsCount() {},\n\n    availableProducts(state) {\n      return state.products.filter(product => product.inventory > 0);\n    },\n\n    //for cart\n    cartProducts(state) {\n      return state.cart.map(cartItem => {\n        const product = state.products.find(product => product.id === cartItem.id);\n        return {\n          title: product.title,\n          price: product.price,\n          quantity: cartItem.quantity\n        };\n      });\n    },\n\n    //cart to total\n    cartTotal(state, getters) {\n      return getters.cartProducts.reduce((total, product) => total + product.price * product.quantity, 0);\n    },\n\n    //product is in stock\n    productIsInStock() {\n      return product => {\n        return product.inventory > 0;\n      };\n    }\n\n  },\n  mutations: {\n    NEW_TODO(state, todoItem) {\n      state.todos.push({\n        title: todoItem,\n        completed: false\n      });\n    },\n\n    DELETE_TODO(state, todoItem) {\n      let index = state.todos.indexOf(todoItem);\n      state.todos.splice(index, 1);\n    },\n\n    TOGGLE_TODO_STATUS(state, todoItem) {\n      todoItem.completed = !todoItem.completed;\n    },\n\n    //setting and updating state\n    //when state change\n    //and only responsible for updating just a piece of the state.\n    setProducts(state, products) {\n      state.products = products;\n    },\n\n    pushProductToCart(state, productId) {\n      state.cart.push({\n        id: productId,\n        quantity: 1\n      });\n    },\n\n    incrementItemQuantity(state, cartItem) {\n      cartItem.quantity++;\n    },\n\n    decrementProductInventory(state, product) {\n      product.inventory--;\n    },\n\n    setCheckoutStatus(state, status) {\n      state.checkoutStatus = status;\n    },\n\n    emptyCart(state) {\n      state.cart = [];\n    }\n\n  },\n  actions: {\n    addNewTodo({\n      commit\n    }, todoItem) {\n      commit(\"NEW_TODO\", todoItem);\n    },\n\n    deleteTodo({\n      commit\n    }, todoItem) {\n      commit(\"DELETE_TODO\", todoItem);\n    },\n\n    toggleTodoStatus({\n      commit\n    }, todoItem) {\n      commit(\"TOGGLE_TODO_STATUS\", todoItem);\n    },\n\n    //make the ajax call\n    //run setProducts mutation\n    fetchProducts({\n      commit\n    }) {\n      return new Promise(resolve => {\n        shop.getProducts(products => {\n          commit(\"setProducts\", products);\n          resolve();\n        });\n      });\n    },\n\n    addProductToCart(context, product) {\n      // if (product.inventory > 0)\n      if (context.getters.productIsInStock(product)) {\n        //find cartItem\n        const cartItem = context.state.cart.find(item => item.id === product.id);\n\n        if (!cartItem) {\n          //pushProductToCart\n          context.commit(\"pushProductToCart\", product.id);\n        } else {\n          //incrementItemQuantity\n          context.commit(\"incrementItemQuantity\", cartItem);\n        }\n\n        context.commit(\"decrementProductInventory\", product);\n      }\n    },\n\n    checkout({\n      state,\n      commit\n    }) {\n      shop.buyProducts(state.cart, () => {\n        commit(\"emptyCart\");\n        commit(\"setCheckoutStatus\", \"success\");\n      }, () => {\n        commit(\"setCheckoutStatus\", \"fail\");\n      });\n    }\n\n  }\n});","map":{"version":3,"names":["createStore","shop","state","todos","title","completed","products","cart","checkoutStatus","getters","completedTodos","filter","todo","length","pendingTodos","productsCount","availableProducts","product","inventory","cartProducts","map","cartItem","find","id","price","quantity","cartTotal","reduce","total","productIsInStock","mutations","NEW_TODO","todoItem","push","DELETE_TODO","index","indexOf","splice","TOGGLE_TODO_STATUS","setProducts","pushProductToCart","productId","incrementItemQuantity","decrementProductInventory","setCheckoutStatus","status","emptyCart","actions","addNewTodo","commit","deleteTodo","toggleTodoStatus","fetchProducts","Promise","resolve","getProducts","addProductToCart","context","item","checkout","buyProducts"],"sources":["/var/www/html/newData/mansi/vuex/src/store/store.js"],"sourcesContent":["// import Vue from \"vue\";\n// import VueX from \"vuex\";\n\n// Vue.use(VueX);\n\n// export default new VueX.Store({\n//   state: {\n//     todos: [\n//       {\n//         title: \"todo item completed A\",\n//         completed: false,\n//       },\n//       {\n//         title: \"todo item completed B\",\n//         completed: false,\n//       },\n//     ],\n//   },\n//   getters: {},\n//   mutations: {},\n//   actions: {},\n// });\n\nimport { createStore } from \"vuex\";\nimport shop from \"./shop\";\nexport default createStore({\n  state: {\n    todos: [\n      {\n        title: \"todo item completed A\",\n        completed: false,\n      },\n      {\n        title: \"todo item completed B\",\n        completed: false,\n      },\n    ],\n\n    //like data\n    products: [],\n    cart: [],\n    checkoutStatus: null,\n  },\n  getters: {\n    completedTodos(state) {\n      return state.todos.filter((todo) => {\n        return todo.completed === true;\n      }).length;\n    },\n    pendingTodos(state) {\n      return state.todos.filter((todo) => {\n        return todo.completed === false;\n      }).length;\n    },\n    productsCount() {},\n    availableProducts(state) {\n      return state.products.filter((product) => product.inventory > 0);\n    },\n\n    //for cart\n    cartProducts(state) {\n      return state.cart.map((cartItem) => {\n        const product = state.products.find(\n          (product) => product.id === cartItem.id\n        );\n        return {\n          title: product.title,\n          price: product.price,\n          quantity: cartItem.quantity,\n        };\n      });\n    },\n\n    //cart to total\n    cartTotal(state, getters) {\n      return getters.cartProducts.reduce(\n        (total, product) => total + product.price * product.quantity,\n        0\n      );\n    },\n\n    //product is in stock\n    productIsInStock() {\n      return (product) => {\n        return product.inventory > 0;\n      };\n    },\n  },\n  mutations: {\n    NEW_TODO(state, todoItem) {\n      state.todos.push({\n        title: todoItem,\n        completed: false,\n      });\n    },\n    DELETE_TODO(state, todoItem) {\n      let index = state.todos.indexOf(todoItem);\n      state.todos.splice(index, 1);\n    },\n    TOGGLE_TODO_STATUS(state, todoItem) {\n      todoItem.completed = !todoItem.completed;\n    },\n\n    //setting and updating state\n    //when state change\n    //and only responsible for updating just a piece of the state.\n    setProducts(state, products) {\n      state.products = products;\n    },\n    pushProductToCart(state, productId) {\n      state.cart.push({\n        id: productId,\n        quantity: 1,\n      });\n    },\n\n    incrementItemQuantity(state, cartItem) {\n      cartItem.quantity++;\n    },\n\n    decrementProductInventory(state, product) {\n      product.inventory--;\n    },\n    setCheckoutStatus(state, status) {\n      state.checkoutStatus = status;\n    },\n    emptyCart(state) {\n      state.cart = [];\n    },\n  },\n  actions: {\n    addNewTodo({ commit }, todoItem) {\n      commit(\"NEW_TODO\", todoItem);\n    },\n    deleteTodo({ commit }, todoItem) {\n      commit(\"DELETE_TODO\", todoItem);\n    },\n    toggleTodoStatus({ commit }, todoItem) {\n      commit(\"TOGGLE_TODO_STATUS\", todoItem);\n    },\n\n    //make the ajax call\n    //run setProducts mutation\n    fetchProducts({ commit }) {\n      return new Promise((resolve) => {\n        shop.getProducts((products) => {\n          commit(\"setProducts\", products);\n          resolve();\n        });\n      });\n    },\n\n    addProductToCart(context, product) {\n      // if (product.inventory > 0)\n      if (context.getters.productIsInStock(product)) {\n        //find cartItem\n        const cartItem = context.state.cart.find(\n          (item) => item.id === product.id\n        );\n        if (!cartItem) {\n          //pushProductToCart\n          context.commit(\"pushProductToCart\", product.id);\n        } else {\n          //incrementItemQuantity\n          context.commit(\"incrementItemQuantity\", cartItem);\n        }\n        context.commit(\"decrementProductInventory\", product);\n      }\n    },\n\n    checkout({ state, commit }) {\n      shop.buyProducts(\n        state.cart,\n        () => {\n          commit(\"emptyCart\");\n          commit(\"setCheckoutStatus\", \"success\");\n        },\n        () => {\n          commit(\"setCheckoutStatus\", \"fail\");\n        }\n      );\n    },\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}