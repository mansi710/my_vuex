{"ast":null,"code":"import { createStore } from \"vuex\";\nimport store from \"./store\";\nimport shop from \"./shop\";\nexport default createStore({\n  state: {\n    //like data\n    products: []\n  },\n  getters: {\n    //like computed properties\n    productsCount() {},\n\n    availableProducts(state) {\n      return state.products.filter(product => product.inventory > 0);\n    }\n\n  },\n  actions: {\n    //make the ajax call\n    //run setProducts mutation\n    //are stores methods\n    fetchProducts(context) {\n      shop.getProducts(products => {\n        context.commit(\"setProducts\", products);\n      });\n    },\n\n    addToCart(context, product) {\n      if (product.inventory > 0) {\n        context.commit;\n      }\n    }\n\n  },\n  mutations: {\n    //setting and updating state\n    //when state change\n    //and only responsible for updating just a piece of the state.\n    setProducts(state, products) {\n      state.products = products;\n    }\n\n  }\n});","map":{"version":3,"names":["createStore","store","shop","state","products","getters","productsCount","availableProducts","filter","product","inventory","actions","fetchProducts","context","getProducts","commit","addToCart","mutations","setProducts"],"sources":["/var/www/html/newData/mansi/vuex/src/store/shoppingcart.js"],"sourcesContent":["import { createStore } from \"vuex\";\nimport store from \"./store\";\nimport shop from \"./shop\";\nexport default createStore({\n  state: {\n    //like data\n    products: [],\n  },\n  getters: {\n    //like computed properties\n    productsCount() {},\n    availableProducts(state) {\n      return state.products.filter((product) => product.inventory > 0);\n    },\n  },\n  actions: {\n    //make the ajax call\n    //run setProducts mutation\n    //are stores methods\n    fetchProducts(context) {\n      shop.getProducts((products) => {\n        context.commit(\"setProducts\", products);\n      });\n    },\n\n    addToCart(context, product) {\n      if(product.inventory > 0){\n        context.commit\n      }\n    },\n  },\n  mutations: {\n    //setting and updating state\n    //when state change\n    //and only responsible for updating just a piece of the state.\n    setProducts(state, products) {\n      state.products = products;\n    },\n  },\n});\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,MAA5B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,eAAeF,WAAW,CAAC;EACzBG,KAAK,EAAE;IACL;IACAC,QAAQ,EAAE;EAFL,CADkB;EAKzBC,OAAO,EAAE;IACP;IACAC,aAAa,GAAG,CAAE,CAFX;;IAGPC,iBAAiB,CAACJ,KAAD,EAAQ;MACvB,OAAOA,KAAK,CAACC,QAAN,CAAeI,MAAf,CAAuBC,OAAD,IAAaA,OAAO,CAACC,SAAR,GAAoB,CAAvD,CAAP;IACD;;EALM,CALgB;EAYzBC,OAAO,EAAE;IACP;IACA;IACA;IACAC,aAAa,CAACC,OAAD,EAAU;MACrBX,IAAI,CAACY,WAAL,CAAkBV,QAAD,IAAc;QAC7BS,OAAO,CAACE,MAAR,CAAe,aAAf,EAA8BX,QAA9B;MACD,CAFD;IAGD,CARM;;IAUPY,SAAS,CAACH,OAAD,EAAUJ,OAAV,EAAmB;MAC1B,IAAGA,OAAO,CAACC,SAAR,GAAoB,CAAvB,EAAyB;QACvBG,OAAO,CAACE,MAAR;MACD;IACF;;EAdM,CAZgB;EA4BzBE,SAAS,EAAE;IACT;IACA;IACA;IACAC,WAAW,CAACf,KAAD,EAAQC,QAAR,EAAkB;MAC3BD,KAAK,CAACC,QAAN,GAAiBA,QAAjB;IACD;;EANQ;AA5Bc,CAAD,CAA1B"},"metadata":{},"sourceType":"module"}