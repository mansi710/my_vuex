{"ast":null,"code":"import shop from \"@/store/shop\";\nexport default {\n  namespaced: true,\n  state: {\n    // {id, quantity}\n    items: [],\n    checkoutStatus: null\n  },\n  getters: {\n    cartProducts(state, getters, rootState, rootGetters) {\n      return state.items.map(cartItem => {\n        const product = rootState.products.items.find(product => product.id === cartItem.id);\n        return {\n          title: product.title,\n          price: product.price,\n          quantity: cartItem.quantity\n        };\n      });\n    },\n\n    cartTotal(state, getters) {\n      return getters.cartProducts.reduce((total, product) => total + product.price * product.quantity, 0);\n    }\n\n  },\n  mutations: {\n    pushProductToCart(state, productId) {\n      state.items.push({\n        id: productId,\n        quantity: 1\n      });\n    },\n\n    incrementItemQuantity(state, cartItem) {\n      cartItem.quantity++;\n    },\n\n    setCheckoutStatus(state, status) {\n      state.checkoutStatus = status;\n    },\n\n    emptyCart(state) {\n      state.items = [];\n    }\n\n  },\n  actions: {\n    addProductToCart({\n      state,\n      getters,\n      commit,\n      rootState,\n      rootGetters\n    }, product) {\n      if (rootGetters['products/productIsInStock'](product)) {\n        const cartItem = state.items.find(item => item.id === product.id);\n\n        if (!cartItem) {\n          commit('pushProductToCart', product.id);\n        } else {\n          commit('incrementItemQuantity', cartItem);\n        }\n\n        commit('products/decrementProductInventory', product, {\n          root: true\n        });\n      }\n    },\n\n    checkout({\n      state,\n      commit\n    }) {\n      shop.buyProducts(state.items, () => {\n        commit('emptyCart');\n        commit('setCheckoutStatus', 'success');\n      }, () => {\n        commit('setCheckoutStatus', 'fail');\n      });\n    }\n\n  }\n};","map":{"version":3,"names":["shop","namespaced","state","items","checkoutStatus","getters","cartProducts","rootState","rootGetters","map","cartItem","product","products","find","id","title","price","quantity","cartTotal","reduce","total","mutations","pushProductToCart","productId","push","incrementItemQuantity","setCheckoutStatus","status","emptyCart","actions","addProductToCart","commit","item","root","checkout","buyProducts"],"sources":["/var/www/html/newData/mansi/vuex/src/store/modules/cart.js"],"sourcesContent":["import shop from \"@/store/shop\";\nexport default {\n  namespaced: true,\n\n  state: {\n    // {id, quantity}\n    items: [],\n    checkoutStatus: null\n  },\n\n  getters: {\n    cartProducts (state, getters, rootState, rootGetters) {\n      return state.items.map(cartItem => {\n        const product = rootState.products.items.find(product => product.id === cartItem.id)\n        return {\n          title: product.title,\n          price: product.price,\n          quantity: cartItem.quantity\n        }\n      })\n    },\n\n    cartTotal (state, getters) {\n      return getters.cartProducts.reduce((total, product) => total + product.price * product.quantity, 0)\n    },\n  },\n\n  mutations: {\n    pushProductToCart (state, productId) {\n      state.items.push({\n        id: productId,\n        quantity: 1\n      })\n    },\n\n    incrementItemQuantity (state, cartItem) {\n      cartItem.quantity++\n    },\n\n    setCheckoutStatus (state, status) {\n      state.checkoutStatus = status\n    },\n\n    emptyCart (state) {\n      state.items = []\n    }\n  },\n\n  actions: {\n    addProductToCart({state, getters, commit, rootState, rootGetters}, product) {\n      if (rootGetters['products/productIsInStock'](product)) {\n        const cartItem = state.items.find(item => item.id === product.id)\n        if (!cartItem) {\n          commit('pushProductToCart', product.id)\n        } else {\n          commit('incrementItemQuantity', cartItem)\n        }\n        commit('products/decrementProductInventory', product, {root: true})\n      }\n    },\n\n    checkout({state, commit}) {\n      shop.buyProducts(\n        state.items,\n        () => {\n          commit('emptyCart')\n          commit('setCheckoutStatus', 'success')\n        },\n        () => {\n          commit('setCheckoutStatus', 'fail')\n        }\n      )\n    }\n  }\n}"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,cAAjB;AACA,eAAe;EACbC,UAAU,EAAE,IADC;EAGbC,KAAK,EAAE;IACL;IACAC,KAAK,EAAE,EAFF;IAGLC,cAAc,EAAE;EAHX,CAHM;EASbC,OAAO,EAAE;IACPC,YAAY,CAAEJ,KAAF,EAASG,OAAT,EAAkBE,SAAlB,EAA6BC,WAA7B,EAA0C;MACpD,OAAON,KAAK,CAACC,KAAN,CAAYM,GAAZ,CAAgBC,QAAQ,IAAI;QACjC,MAAMC,OAAO,GAAGJ,SAAS,CAACK,QAAV,CAAmBT,KAAnB,CAAyBU,IAAzB,CAA8BF,OAAO,IAAIA,OAAO,CAACG,EAAR,KAAeJ,QAAQ,CAACI,EAAjE,CAAhB;QACA,OAAO;UACLC,KAAK,EAAEJ,OAAO,CAACI,KADV;UAELC,KAAK,EAAEL,OAAO,CAACK,KAFV;UAGLC,QAAQ,EAAEP,QAAQ,CAACO;QAHd,CAAP;MAKD,CAPM,CAAP;IAQD,CAVM;;IAYPC,SAAS,CAAEhB,KAAF,EAASG,OAAT,EAAkB;MACzB,OAAOA,OAAO,CAACC,YAAR,CAAqBa,MAArB,CAA4B,CAACC,KAAD,EAAQT,OAAR,KAAoBS,KAAK,GAAGT,OAAO,CAACK,KAAR,GAAgBL,OAAO,CAACM,QAAhF,EAA0F,CAA1F,CAAP;IACD;;EAdM,CATI;EA0BbI,SAAS,EAAE;IACTC,iBAAiB,CAAEpB,KAAF,EAASqB,SAAT,EAAoB;MACnCrB,KAAK,CAACC,KAAN,CAAYqB,IAAZ,CAAiB;QACfV,EAAE,EAAES,SADW;QAEfN,QAAQ,EAAE;MAFK,CAAjB;IAID,CANQ;;IAQTQ,qBAAqB,CAAEvB,KAAF,EAASQ,QAAT,EAAmB;MACtCA,QAAQ,CAACO,QAAT;IACD,CAVQ;;IAYTS,iBAAiB,CAAExB,KAAF,EAASyB,MAAT,EAAiB;MAChCzB,KAAK,CAACE,cAAN,GAAuBuB,MAAvB;IACD,CAdQ;;IAgBTC,SAAS,CAAE1B,KAAF,EAAS;MAChBA,KAAK,CAACC,KAAN,GAAc,EAAd;IACD;;EAlBQ,CA1BE;EA+Cb0B,OAAO,EAAE;IACPC,gBAAgB,CAAC;MAAC5B,KAAD;MAAQG,OAAR;MAAiB0B,MAAjB;MAAyBxB,SAAzB;MAAoCC;IAApC,CAAD,EAAmDG,OAAnD,EAA4D;MAC1E,IAAIH,WAAW,CAAC,2BAAD,CAAX,CAAyCG,OAAzC,CAAJ,EAAuD;QACrD,MAAMD,QAAQ,GAAGR,KAAK,CAACC,KAAN,CAAYU,IAAZ,CAAiBmB,IAAI,IAAIA,IAAI,CAAClB,EAAL,KAAYH,OAAO,CAACG,EAA7C,CAAjB;;QACA,IAAI,CAACJ,QAAL,EAAe;UACbqB,MAAM,CAAC,mBAAD,EAAsBpB,OAAO,CAACG,EAA9B,CAAN;QACD,CAFD,MAEO;UACLiB,MAAM,CAAC,uBAAD,EAA0BrB,QAA1B,CAAN;QACD;;QACDqB,MAAM,CAAC,oCAAD,EAAuCpB,OAAvC,EAAgD;UAACsB,IAAI,EAAE;QAAP,CAAhD,CAAN;MACD;IACF,CAXM;;IAaPC,QAAQ,CAAC;MAAChC,KAAD;MAAQ6B;IAAR,CAAD,EAAkB;MACxB/B,IAAI,CAACmC,WAAL,CACEjC,KAAK,CAACC,KADR,EAEE,MAAM;QACJ4B,MAAM,CAAC,WAAD,CAAN;QACAA,MAAM,CAAC,mBAAD,EAAsB,SAAtB,CAAN;MACD,CALH,EAME,MAAM;QACJA,MAAM,CAAC,mBAAD,EAAsB,MAAtB,CAAN;MACD,CARH;IAUD;;EAxBM;AA/CI,CAAf"},"metadata":{},"sourceType":"module"}