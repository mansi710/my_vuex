{"ast":null,"code":"import shop from \"../shop\";\nexport default {\n  state: {\n    items: [],\n    checkoutStatus: null\n  },\n  getters: {\n    //for items\n    cartProducts(state) {\n      return state.items.map(cartItem => {\n        const product = state.products.find(product => product.id === cartItem.id);\n        return {\n          title: product.title,\n          price: product.price,\n          quantity: cartItem.quantity\n        };\n      });\n    },\n\n    //items to total\n    cartTotal(state, getters) {\n      return getters.cartProducts.reduce((total, product) => total + product.price * product.quantity, 0);\n    }\n\n  },\n  mutations: {\n    pushProductToCart(state, productId) {\n      state.items.push({\n        id: productId,\n        quantity: 1\n      });\n    },\n\n    incrementItemQuantity(state, cartItem) {\n      cartItem.quantity++;\n    },\n\n    setCheckoutStatus(state, status) {\n      state.checkoutStatus = status;\n    },\n\n    emptyCart(state) {\n      state.items = [];\n    }\n\n  },\n  actions: {\n    addProductToCart({\n      state,\n      commit,\n      getters\n    }\n    /**context*/\n    , product) {\n      // if (product.inventory > 0)\n      if (getters.productIsInStock(product)) {\n        //find cartItem\n        const cartItem = state.items.find(item => item.id === product.id);\n\n        if (!cartItem) {\n          //pushProductToCart\n          commit(\"pushProductToCart\", product.id);\n        } else {\n          //incrementItemQuantity\n          commit(\"incrementItemQuantity\", cartItem);\n        }\n\n        commit(\"decrementProductInventory\", product);\n      }\n    },\n\n    checkout({\n      state,\n      commit\n    }) {\n      shop.buyProducts(state.items, () => {\n        commit(\"emptyCart\");\n        commit(\"setCheckoutStatus\", \"success\");\n      }, () => {\n        commit(\"setCheckoutStatus\", \"fail\");\n      });\n    }\n\n  }\n};","map":{"version":3,"names":["shop","state","items","checkoutStatus","getters","cartProducts","map","cartItem","product","products","find","id","title","price","quantity","cartTotal","reduce","total","mutations","pushProductToCart","productId","push","incrementItemQuantity","setCheckoutStatus","status","emptyCart","actions","addProductToCart","commit","productIsInStock","item","checkout","buyProducts"],"sources":["/var/www/html/newData/mansi/vuex/src/store/modules/cart.js"],"sourcesContent":["import shop from \"../shop\";\nexport default {\n  state: {\n    items: [],\n    checkoutStatus: null,\n  },\n  getters: {\n    //for items\n    cartProducts(state) {\n      return state.items.map((cartItem) => {\n        const product = state.products.find(\n          (product) => product.id === cartItem.id\n        );\n        return {\n          title: product.title,\n          price: product.price,\n          quantity: cartItem.quantity,\n        };\n      });\n    },\n\n    //items to total\n    cartTotal(state, getters) {\n      return getters.cartProducts.reduce(\n        (total, product) => total + product.price * product.quantity,\n        0\n      );\n    },\n  },\n  mutations: {\n    pushProductToCart(state, productId) {\n      state.items.push({\n        id: productId,\n        quantity: 1,\n      });\n    },\n\n    incrementItemQuantity(state, cartItem) {\n      cartItem.quantity++;\n    },\n    setCheckoutStatus(state, status) {\n      state.checkoutStatus = status;\n    },\n    emptyCart(state) {\n      state.items = [];\n    },\n  },\n  actions: {\n    addProductToCart({ state, commit, getters } /**context*/, product) {\n      // if (product.inventory > 0)\n      if (getters.productIsInStock(product)) {\n        //find cartItem\n        const cartItem = state.items.find((item) => item.id === product.id);\n        if (!cartItem) {\n          //pushProductToCart\n          commit(\"pushProductToCart\", product.id);\n        } else {\n          //incrementItemQuantity\n          commit(\"incrementItemQuantity\", cartItem);\n        }\n        commit(\"decrementProductInventory\", product);\n      }\n    },\n\n    checkout({ state, commit }) {\n      shop.buyProducts(\n        state.items,\n        () => {\n          commit(\"emptyCart\");\n          commit(\"setCheckoutStatus\", \"success\");\n        },\n        () => {\n          commit(\"setCheckoutStatus\", \"fail\");\n        }\n      );\n    },\n  },\n};\n"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;AACA,eAAe;EACbC,KAAK,EAAE;IACLC,KAAK,EAAE,EADF;IAELC,cAAc,EAAE;EAFX,CADM;EAKbC,OAAO,EAAE;IACP;IACAC,YAAY,CAACJ,KAAD,EAAQ;MAClB,OAAOA,KAAK,CAACC,KAAN,CAAYI,GAAZ,CAAiBC,QAAD,IAAc;QACnC,MAAMC,OAAO,GAAGP,KAAK,CAACQ,QAAN,CAAeC,IAAf,CACbF,OAAD,IAAaA,OAAO,CAACG,EAAR,KAAeJ,QAAQ,CAACI,EADvB,CAAhB;QAGA,OAAO;UACLC,KAAK,EAAEJ,OAAO,CAACI,KADV;UAELC,KAAK,EAAEL,OAAO,CAACK,KAFV;UAGLC,QAAQ,EAAEP,QAAQ,CAACO;QAHd,CAAP;MAKD,CATM,CAAP;IAUD,CAbM;;IAeP;IACAC,SAAS,CAACd,KAAD,EAAQG,OAAR,EAAiB;MACxB,OAAOA,OAAO,CAACC,YAAR,CAAqBW,MAArB,CACL,CAACC,KAAD,EAAQT,OAAR,KAAoBS,KAAK,GAAGT,OAAO,CAACK,KAAR,GAAgBL,OAAO,CAACM,QAD/C,EAEL,CAFK,CAAP;IAID;;EArBM,CALI;EA4BbI,SAAS,EAAE;IACTC,iBAAiB,CAAClB,KAAD,EAAQmB,SAAR,EAAmB;MAClCnB,KAAK,CAACC,KAAN,CAAYmB,IAAZ,CAAiB;QACfV,EAAE,EAAES,SADW;QAEfN,QAAQ,EAAE;MAFK,CAAjB;IAID,CANQ;;IAQTQ,qBAAqB,CAACrB,KAAD,EAAQM,QAAR,EAAkB;MACrCA,QAAQ,CAACO,QAAT;IACD,CAVQ;;IAWTS,iBAAiB,CAACtB,KAAD,EAAQuB,MAAR,EAAgB;MAC/BvB,KAAK,CAACE,cAAN,GAAuBqB,MAAvB;IACD,CAbQ;;IAcTC,SAAS,CAACxB,KAAD,EAAQ;MACfA,KAAK,CAACC,KAAN,GAAc,EAAd;IACD;;EAhBQ,CA5BE;EA8CbwB,OAAO,EAAE;IACPC,gBAAgB,CAAC;MAAE1B,KAAF;MAAS2B,MAAT;MAAiBxB;IAAjB;IAA2B;IAA5B,EAA0CI,OAA1C,EAAmD;MACjE;MACA,IAAIJ,OAAO,CAACyB,gBAAR,CAAyBrB,OAAzB,CAAJ,EAAuC;QACrC;QACA,MAAMD,QAAQ,GAAGN,KAAK,CAACC,KAAN,CAAYQ,IAAZ,CAAkBoB,IAAD,IAAUA,IAAI,CAACnB,EAAL,KAAYH,OAAO,CAACG,EAA/C,CAAjB;;QACA,IAAI,CAACJ,QAAL,EAAe;UACb;UACAqB,MAAM,CAAC,mBAAD,EAAsBpB,OAAO,CAACG,EAA9B,CAAN;QACD,CAHD,MAGO;UACL;UACAiB,MAAM,CAAC,uBAAD,EAA0BrB,QAA1B,CAAN;QACD;;QACDqB,MAAM,CAAC,2BAAD,EAA8BpB,OAA9B,CAAN;MACD;IACF,CAfM;;IAiBPuB,QAAQ,CAAC;MAAE9B,KAAF;MAAS2B;IAAT,CAAD,EAAoB;MAC1B5B,IAAI,CAACgC,WAAL,CACE/B,KAAK,CAACC,KADR,EAEE,MAAM;QACJ0B,MAAM,CAAC,WAAD,CAAN;QACAA,MAAM,CAAC,mBAAD,EAAsB,SAAtB,CAAN;MACD,CALH,EAME,MAAM;QACJA,MAAM,CAAC,mBAAD,EAAsB,MAAtB,CAAN;MACD,CARH;IAUD;;EA5BM;AA9CI,CAAf"},"metadata":{},"sourceType":"module"}