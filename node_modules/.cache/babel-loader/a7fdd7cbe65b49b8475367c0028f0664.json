{"ast":null,"code":"// import Vue from \"vue\";\n// import VueX from \"vuex\";\n// Vue.use(VueX);\n// export default new VueX.Store({\n//   state: {\n//     todos: [\n//       {\n//         title: \"todo item completed A\",\n//         completed: false,\n//       },\n//       {\n//         title: \"todo item completed B\",\n//         completed: false,\n//       },\n//     ],\n//   },\n//   getters: {},\n//   mutations: {},\n//   actions: {},\n// });\nimport { createStore } from \"vuex\"; // import shop from \"./shop\";\n\nimport action from \"./action\";\nexport default createStore({\n  state: {\n    todos: [{\n      title: \"todo item completed A\",\n      completed: false\n    }, {\n      title: \"todo item completed B\",\n      completed: false\n    }],\n    //like data\n    products: []\n  },\n  getters: {\n    completedTodos(state) {\n      return state.todos.filter(todo => {\n        return todo.completed === true;\n      }).length;\n    },\n\n    pendingTodos(state) {\n      return state.todos.filter(todo => {\n        return todo.completed === false;\n      }).length;\n    },\n\n    productsCount() {},\n\n    availableProducts(state) {\n      return state.products.filter(product => product.inventory > 0);\n    },\n\n    //product is in stock\n    productIsInStock() {\n      return product => {\n        return product.inventory > 0;\n      };\n    }\n\n  },\n  mutations: {\n    NEW_TODO(state, todoItem) {\n      state.todos.push({\n        title: todoItem,\n        completed: false\n      });\n    },\n\n    DELETE_TODO(state, todoItem) {\n      let index = state.todos.indexOf(todoItem);\n      state.todos.splice(index, 1);\n    },\n\n    TOGGLE_TODO_STATUS(state, todoItem) {\n      todoItem.completed = !todoItem.completed;\n    },\n\n    //setting and updating state\n    //when state change\n    //and only responsible for updating just a piece of the state.\n    setProducts(state, products) {\n      state.products = products;\n    },\n\n    pushProductToCart(state, productId) {\n      state.cart.push({\n        id: productId,\n        quantity: 1\n      });\n    },\n\n    incrementItemQuantity(state, cartItem) {\n      cartItem.quantity++;\n    },\n\n    decrementProductInventory(state, product) {\n      product.inventory--;\n    },\n\n    setCheckoutStatus(state, status) {\n      state.checkoutStatus = status;\n    },\n\n    emptyCart(state) {\n      state.cart = [];\n    }\n\n  },\n  action\n});","map":{"version":3,"names":["createStore","action","state","todos","title","completed","products","getters","completedTodos","filter","todo","length","pendingTodos","productsCount","availableProducts","product","inventory","productIsInStock","mutations","NEW_TODO","todoItem","push","DELETE_TODO","index","indexOf","splice","TOGGLE_TODO_STATUS","setProducts","pushProductToCart","productId","cart","id","quantity","incrementItemQuantity","cartItem","decrementProductInventory","setCheckoutStatus","status","checkoutStatus","emptyCart"],"sources":["/var/www/html/newData/mansi/vuex/src/store/store.js"],"sourcesContent":["// import Vue from \"vue\";\n// import VueX from \"vuex\";\n\n// Vue.use(VueX);\n\n// export default new VueX.Store({\n//   state: {\n//     todos: [\n//       {\n//         title: \"todo item completed A\",\n//         completed: false,\n//       },\n//       {\n//         title: \"todo item completed B\",\n//         completed: false,\n//       },\n//     ],\n//   },\n//   getters: {},\n//   mutations: {},\n//   actions: {},\n// });\n\nimport { createStore } from \"vuex\";\n// import shop from \"./shop\";\nimport action from \"./action\";\nexport default createStore({\n  state: {\n    todos: [\n      {\n        title: \"todo item completed A\",\n        completed: false,\n      },\n      {\n        title: \"todo item completed B\",\n        completed: false,\n      },\n    ],\n\n    //like data\n    products: []\n  },\n  getters: {\n    completedTodos(state) {\n      return state.todos.filter((todo) => {\n        return todo.completed === true;\n      }).length;\n    },\n    pendingTodos(state) {\n      return state.todos.filter((todo) => {\n        return todo.completed === false;\n      }).length;\n    },\n    productsCount() {},\n    availableProducts(state) {\n      return state.products.filter((product) => product.inventory > 0);\n    },\n\n   \n\n    //product is in stock\n    productIsInStock() {\n      return (product) => {\n        return product.inventory > 0;\n      };\n    },\n  },\n  mutations: {\n    NEW_TODO(state, todoItem) {\n      state.todos.push({\n        title: todoItem,\n        completed: false,\n      });\n    },\n    DELETE_TODO(state, todoItem) {\n      let index = state.todos.indexOf(todoItem);\n      state.todos.splice(index, 1);\n    },\n    TOGGLE_TODO_STATUS(state, todoItem) {\n      todoItem.completed = !todoItem.completed;\n    },\n\n    //setting and updating state\n    //when state change\n    //and only responsible for updating just a piece of the state.\n    setProducts(state, products) {\n      state.products = products;\n    },\n    pushProductToCart(state, productId) {\n      state.cart.push({\n        id: productId,\n        quantity: 1,\n      });\n    },\n\n    incrementItemQuantity(state, cartItem) {\n      cartItem.quantity++;\n    },\n\n    decrementProductInventory(state, product) {\n      product.inventory--;\n    },\n    setCheckoutStatus(state, status) {\n      state.checkoutStatus = status;\n    },\n    emptyCart(state) {\n      state.cart = [];\n    },\n  },\n  action,\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}