{"ast":null,"code":"// import shop from \"@/store/shop\";\nimport store from \"@/store/store\";\nimport { mapState, mapGetters } from \"vuex\";\nexport default {\n  data() {\n    return {\n      // products: [],\n      loading: false,\n      productIndex: 1\n    };\n  },\n\n  computed: { ...mapState({\n      products: state => state.products\n    }),\n    ...mapGetters({\n      productIsInStock: \"\"\n    })\n  },\n\n  /** computed: {\n    //return the product from the state.\n    products() {\n      // return store.state.products;\n       // for available product to fetch getter\n      // return store.getters.availableProducts;\n       //using getter\n      return this.$store.state.products;\n    },\n     productIsInStock() {\n      return this.$store.getters.productIsInStock;\n    },\n  },*/\n  methods: {\n    addProductToCart(product) {\n      store.dispatch(\"addProductToCart\", product);\n    }\n\n  },\n\n  created() {\n    // shop.getProducts((products) => {\n    //   //   store.state.products = products;\n    //   //commit mutation\n    //   store.commit(\"setProducts\", products);\n    // });\n    this.loading = true;\n    store.dispatch(\"fetchProducts\").then(() => this.loading = false);\n  }\n\n};","map":{"version":3,"mappings":"AAgBA;AACA,OAAOA,KAAP,MAAkB,eAAlB;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,MAArC;AACA,eAAe;EACbC,IAAI,GAAG;IACL,OAAO;MACL;MACAC,OAAO,EAAE,KAFJ;MAGLC,YAAY,EAAE;IAHT,CAAP;EAKD,CAPY;;EASbC,QAAQ,EAAE,EACR,GAAGL,QAAQ,CAAC;MACVM,QAAQ,EAAGC,KAAD,IAAWA,KAAK,CAACD;IADjB,CAAD,CADH;IAKR,GAAGL,UAAU,CAAC;MACZO,gBAAgB,EAAC;IADL,CAAD;EALL,CATG;;EAkBb;;;;;;;;;;;;;EAgBAC,OAAO,EAAE;IACPC,gBAAgB,CAACC,OAAD,EAAU;MACxBZ,KAAK,CAACa,QAAN,CAAe,kBAAf,EAAmCD,OAAnC;IACD;;EAHM,CAlCI;;EAuCbE,OAAO,GAAG;IACR;IACA;IACA;IACA;IACA;IAEA,KAAKV,OAAL,GAAe,IAAf;IACAJ,KAAK,CAACa,QAAN,CAAe,eAAf,EAAgCE,IAAhC,CAAqC,MAAO,KAAKX,OAAL,GAAe,KAA3D;EACD;;AAhDY,CAAf","names":["store","mapState","mapGetters","data","loading","productIndex","computed","products","state","productIsInStock","methods","addProductToCart","product","dispatch","created","then"],"sourceRoot":"","sources":["/var/www/html/newData/mansi/vuex/src/components/ProductList.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Product List</h1>\n    <img v-if=\"loading\" src=\"https://i.imgur.com/JfPpwOA.gif\" />\n    <ul v-else>\n      <li v-for=\"product in products\" :key=\"product.name\">\n        {{ product.title }} - {{ product.price }} - {{ product.inventory }}\n        <button :disabled=\"!productIsInStock(product)\" @click=\"addProductToCart(product)\">\n          Add To Cart\n        </button>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\n// import shop from \"@/store/shop\";\nimport store from \"@/store/store\";\nimport { mapState, mapGetters } from \"vuex\";\nexport default {\n  data() {\n    return {\n      // products: [],\n      loading: false,\n      productIndex: 1,\n    };\n  },\n\n  computed: {\n    ...mapState({\n      products: (state) => state.products,\n    }),\n\n    ...mapGetters({\n      productIsInStock:\"\"\n    }),\n  },\n  /** computed: {\n    //return the product from the state.\n    products() {\n      // return store.state.products;\n\n      // for available product to fetch getter\n      // return store.getters.availableProducts;\n\n      //using getter\n      return this.$store.state.products;\n    },\n\n    productIsInStock() {\n      return this.$store.getters.productIsInStock;\n    },\n  },*/\n  methods: {\n    addProductToCart(product) {\n      store.dispatch(\"addProductToCart\", product);\n    },\n  },\n  created() {\n    // shop.getProducts((products) => {\n    //   //   store.state.products = products;\n    //   //commit mutation\n    //   store.commit(\"setProducts\", products);\n    // });\n\n    this.loading = true;\n    store.dispatch(\"fetchProducts\").then(() => (this.loading = false));\n  },\n};\n</script>\n\n<style scoped></style>\n"]},"metadata":{},"sourceType":"module"}