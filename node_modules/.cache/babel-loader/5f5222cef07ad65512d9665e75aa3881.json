{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Product List\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.products, product => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: product.name\n    }, _toDisplayString(product.title) + \" - \" + _toDisplayString(product.price), 1\n    /* TEXT */\n    );\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])]);\n}","map":{"version":3,"mappings":";;gCAEIA,oBAAqB,IAArB,EAAqB,IAArB,EAAI,cAAJ,EAAgB;AAAA;AAAhB;;;uBADFC,oBAOM,KAPN,EAOM,IAPN,EAOM,CANJC,UAMI,EALJF,oBAIK,IAJL,EAIK,IAJL,EAIK,oBAHHC,oBAEKE,SAFL,EAEK,IAFL,EAEKC,YAFiBC,iBAEjB,EAFMC,OAAmB,IAAZ;yBAAlBL,oBAEK,IAFL,EAEK;MAF4BM,GAAG,EAAED,OAAO,CAACE;IAEzC,CAFL,mBACKF,OAAO,CAACG,SAAQ,QAAGC,iBAAGJ,OAAO,CAACK,KAAX,CADxB,EACwC;IAAA;IADxC;GAEK,CAFL;;EAAA,CAGG,EAJL,CAKI,CAPN","names":["_createElementVNode","_createElementBlock","_hoisted_1","_Fragment","_renderList","$options","product","key","name","title","_toDisplayString","price"],"sourceRoot":"","sources":["/var/www/html/newData/mansi/vuex/src/components/ProductList.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Product List</h1>\n    <ul>\n      <li v-for=\"product in products\" :key=\"product.name\">\n        {{ product.title }} - {{ product.price }}\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\n// import shop from \"@/store/shop\";\nimport store from \"@/store/shoppingcart\";\nexport default {\n  data() {\n    return {\n      // products: [],\n      loding: false,\n    };\n  },\n  computed: {\n    //return the product from the state.\n    products() {\n      // return store.state.products;\n\n      // for available product to fetch getter\n      return store.getters.availableProducts;\n    },\n  },\n  created() {\n    // shop.getProducts((products) => {\n    //   //   store.state.products = products;\n    //   //commit mutation\n    //   store.commit(\"setProducts\", products);\n    // });\n\n    this.loading = true;\n    store.dispatch(\"fetchProducts\");\n  },\n};\n</script>\n\n<style scoped></style>\n"]},"metadata":{},"sourceType":"module"}