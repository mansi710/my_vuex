{"ast":null,"code":"// import Vue from \"vue\";\n// import VueX from \"vuex\";\n// Vue.use(VueX);\n// export default new VueX.Store({\n//   state: {\n//     todos: [\n//       {\n//         title: \"todo item completed A\",\n//         completed: false,\n//       },\n//       {\n//         title: \"todo item completed B\",\n//         completed: false,\n//       },\n//     ],\n//   },\n//   getters: {},\n//   mutations: {},\n//   actions: {},\n// });\nimport { createStore } from \"vuex\"; // import shop from \"./shop\";\n\nimport actions from \"./actions\";\nimport cart from \"./modules/cart\";\nimport products from \"./modules/products\";\nexport default createStore({\n  state: {\n    todos: [{\n      title: \"todo item completed A\",\n      completed: false\n    }, {\n      title: \"todo item completed B\",\n      completed: false\n    }] //like data\n    // products: [],\n\n  },\n  // modules: {\n  //   cart,\n  //   products,\n  // },\n  getters: {\n    completedTodos(state) {\n      return state.todos.filter(todo => {\n        return todo.completed === true;\n      }).length;\n    },\n\n    pendingTodos(state) {\n      return state.todos.filter(todo => {\n        return todo.completed === false;\n      }).length;\n    },\n\n    productsCount() {},\n\n    // cartProducts(state, getters, rootState) {\n    availableProducts(state) {\n      return state.products.filter(product => product.inventory > 0);\n    },\n\n    // //for cart\n    // cartProducts(state) {\n    //   return state.cart.map((cartItem) => {\n    //     const product = state.products.find(\n    //       (product) => product.id === cartItem.id\n    //     );\n    //     return {\n    //       title: product.title,\n    //       price: product.price,\n    //       quantity: cartItem.quantity,\n    //     };\n    //   });\n    // },\n    // //cart to total\n    // cartTotal(state, getters) {\n    //   return getters.cartProducts.reduce(\n    //     (total, product) => total + product.price * product.quantity,\n    //     0\n    //   );\n    // },\n    //product is in stock\n    productIsInStock() {\n      return product => {\n        return product.inventory > 0;\n      };\n    }\n\n  },\n  mutations: {\n    NEW_TODO(state, todoItem) {\n      state.todos.push({\n        title: todoItem,\n        completed: false\n      });\n    },\n\n    DELETE_TODO(state, todoItem) {\n      let index = state.todos.indexOf(todoItem);\n      state.todos.splice(index, 1);\n    },\n\n    TOGGLE_TODO_STATUS(state, todoItem) {\n      todoItem.completed = !todoItem.completed;\n    },\n\n    //setting and updating state\n    //when state change\n    //and only responsible for updating just a piece of the state.\n    // setProducts(state, products) {\n    //   state.products = products;\n    // },\n    // pushProductToCart(state, productId) {\n    //   state.cart.push({\n    //     id: productId,\n    //     quantity: 1,\n    //   });\n    // },\n    // incrementItemQuantity(state, cartItem) {\n    //   cartItem.quantity++;\n    // },\n    decrementProductInventory(state, product) {\n      product.inventory--;\n    } // setCheckoutStatus(state, status) {\n    //   state.checkoutStatus = status;\n    // },\n    // emptyCart(state) {\n    //   state.cart = [];\n    // },\n\n\n  },\n  actions\n});","map":{"version":3,"names":["createStore","actions","cart","products","state","todos","title","completed","getters","completedTodos","filter","todo","length","pendingTodos","productsCount","availableProducts","product","inventory","productIsInStock","mutations","NEW_TODO","todoItem","push","DELETE_TODO","index","indexOf","splice","TOGGLE_TODO_STATUS","decrementProductInventory"],"sources":["/var/www/html/newData/mansi/vuex/src/store/store.js"],"sourcesContent":["// import Vue from \"vue\";\n// import VueX from \"vuex\";\n\n// Vue.use(VueX);\n\n// export default new VueX.Store({\n//   state: {\n//     todos: [\n//       {\n//         title: \"todo item completed A\",\n//         completed: false,\n//       },\n//       {\n//         title: \"todo item completed B\",\n//         completed: false,\n//       },\n//     ],\n//   },\n//   getters: {},\n//   mutations: {},\n//   actions: {},\n// });\n\nimport { createStore } from \"vuex\";\n// import shop from \"./shop\";\nimport actions from \"./actions\";\nimport cart from \"./modules/cart\";\nimport products from \"./modules/products\";\nexport default createStore({\n  state: {\n    todos: [\n      {\n        title: \"todo item completed A\",\n        completed: false,\n      },\n      {\n        title: \"todo item completed B\",\n        completed: false,\n      },\n    ],\n\n    //like data\n    // products: [],\n  },\n\n  // modules: {\n  //   cart,\n  //   products,\n  // },\n  getters: {\n    completedTodos(state) {\n      return state.todos.filter((todo) => {\n        return todo.completed === true;\n      }).length;\n    },\n    pendingTodos(state) {\n      return state.todos.filter((todo) => {\n        return todo.completed === false;\n      }).length;\n    },\n    productsCount() {},\n    // cartProducts(state, getters, rootState) {\n\n    availableProducts(state) {\n      return state.products.filter((product) => product.inventory > 0);\n    },\n\n    // //for cart\n    // cartProducts(state) {\n    //   return state.cart.map((cartItem) => {\n    //     const product = state.products.find(\n    //       (product) => product.id === cartItem.id\n    //     );\n    //     return {\n    //       title: product.title,\n    //       price: product.price,\n    //       quantity: cartItem.quantity,\n    //     };\n    //   });\n    // },\n\n    // //cart to total\n    // cartTotal(state, getters) {\n    //   return getters.cartProducts.reduce(\n    //     (total, product) => total + product.price * product.quantity,\n    //     0\n    //   );\n    // },\n\n    //product is in stock\n    productIsInStock() {\n      return (product) => {\n        return product.inventory > 0;\n      };\n    },\n  },\n  mutations: {\n    NEW_TODO(state, todoItem) {\n      state.todos.push({\n        title: todoItem,\n        completed: false,\n      });\n    },\n    DELETE_TODO(state, todoItem) {\n      let index = state.todos.indexOf(todoItem);\n      state.todos.splice(index, 1);\n    },\n    TOGGLE_TODO_STATUS(state, todoItem) {\n      todoItem.completed = !todoItem.completed;\n    },\n\n    //setting and updating state\n    //when state change\n    //and only responsible for updating just a piece of the state.\n    // setProducts(state, products) {\n    //   state.products = products;\n    // },\n    // pushProductToCart(state, productId) {\n    //   state.cart.push({\n    //     id: productId,\n    //     quantity: 1,\n    //   });\n    // },\n\n    // incrementItemQuantity(state, cartItem) {\n    //   cartItem.quantity++;\n    // },\n\n    decrementProductInventory(state, product) {\n      product.inventory--;\n    },\n    // setCheckoutStatus(state, status) {\n    //   state.checkoutStatus = status;\n    // },\n    // emptyCart(state) {\n    //   state.cart = [];\n    // },\n  },\n  actions,\n});\n"],"mappings":"AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,WAAT,QAA4B,MAA5B,C,CACA;;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,eAAeH,WAAW,CAAC;EACzBI,KAAK,EAAE;IACLC,KAAK,EAAE,CACL;MACEC,KAAK,EAAE,uBADT;MAEEC,SAAS,EAAE;IAFb,CADK,EAKL;MACED,KAAK,EAAE,uBADT;MAEEC,SAAS,EAAE;IAFb,CALK,CADF,CAYL;IACA;;EAbK,CADkB;EAiBzB;EACA;EACA;EACA;EACAC,OAAO,EAAE;IACPC,cAAc,CAACL,KAAD,EAAQ;MACpB,OAAOA,KAAK,CAACC,KAAN,CAAYK,MAAZ,CAAoBC,IAAD,IAAU;QAClC,OAAOA,IAAI,CAACJ,SAAL,KAAmB,IAA1B;MACD,CAFM,EAEJK,MAFH;IAGD,CALM;;IAMPC,YAAY,CAACT,KAAD,EAAQ;MAClB,OAAOA,KAAK,CAACC,KAAN,CAAYK,MAAZ,CAAoBC,IAAD,IAAU;QAClC,OAAOA,IAAI,CAACJ,SAAL,KAAmB,KAA1B;MACD,CAFM,EAEJK,MAFH;IAGD,CAVM;;IAWPE,aAAa,GAAG,CAAE,CAXX;;IAYP;IAEAC,iBAAiB,CAACX,KAAD,EAAQ;MACvB,OAAOA,KAAK,CAACD,QAAN,CAAeO,MAAf,CAAuBM,OAAD,IAAaA,OAAO,CAACC,SAAR,GAAoB,CAAvD,CAAP;IACD,CAhBM;;IAkBP;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACAC,gBAAgB,GAAG;MACjB,OAAQF,OAAD,IAAa;QAClB,OAAOA,OAAO,CAACC,SAAR,GAAoB,CAA3B;MACD,CAFD;IAGD;;EA7CM,CArBgB;EAoEzBE,SAAS,EAAE;IACTC,QAAQ,CAAChB,KAAD,EAAQiB,QAAR,EAAkB;MACxBjB,KAAK,CAACC,KAAN,CAAYiB,IAAZ,CAAiB;QACfhB,KAAK,EAAEe,QADQ;QAEfd,SAAS,EAAE;MAFI,CAAjB;IAID,CANQ;;IAOTgB,WAAW,CAACnB,KAAD,EAAQiB,QAAR,EAAkB;MAC3B,IAAIG,KAAK,GAAGpB,KAAK,CAACC,KAAN,CAAYoB,OAAZ,CAAoBJ,QAApB,CAAZ;MACAjB,KAAK,CAACC,KAAN,CAAYqB,MAAZ,CAAmBF,KAAnB,EAA0B,CAA1B;IACD,CAVQ;;IAWTG,kBAAkB,CAACvB,KAAD,EAAQiB,QAAR,EAAkB;MAClCA,QAAQ,CAACd,SAAT,GAAqB,CAACc,QAAQ,CAACd,SAA/B;IACD,CAbQ;;IAeT;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IAEAqB,yBAAyB,CAACxB,KAAD,EAAQY,OAAR,EAAiB;MACxCA,OAAO,CAACC,SAAR;IACD,CAlCQ,CAmCT;IACA;IACA;IACA;IACA;IACA;;;EAxCS,CApEc;EA8GzBhB;AA9GyB,CAAD,CAA1B"},"metadata":{},"sourceType":"module"}